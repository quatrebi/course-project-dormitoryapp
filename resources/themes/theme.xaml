<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <DropShadowEffect x:Key="DropShadow" BlurRadius="2" Direction="-45" Opacity="0.18" ShadowDepth="2"/>

    <!-- Styles -->

    <Style TargetType="{x:Type Window}" x:Key="WindowStyle">
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Icon" Value="/DormitoryApp;component/resources/images/icons/icon.png"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="FontFamily" Value="/DormitoryApp;component/resources/fonts/#Gardens CM"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
    </Style>

    <Style TargetType="{x:Type Page}" x:Key="PageStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="/DormitoryApp;component/resources/fonts/#Gardens CM"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockStyle">
        <Setter Property="FontFamily" Value="/DormitoryApp;component/resources/fonts/#Gardens CM"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="Heading 1" BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="32"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="Heading 2" BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="24"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="Heading 3" BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="Heading 4" BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="FontWeight" Value="Thin"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{DynamicResource SubPrimaryBrush}"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="BorderStyle">
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Effect" Value="{DynamicResource DropShadow}"/>
        <Setter Property="Background" Value="{DynamicResource DefaultGradient}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TransparentTextBox">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
    </Style>

    <ControlTemplate TargetType="{x:Type TextBox}" x:Key="TextBoxTemplate">
        <Border Style="{DynamicResource BorderStyle}" Padding="16, 8" Margin="{TemplateBinding Margin}"
                BorderBrush="{TemplateBinding BorderBrush}">
            <TextBox Style="{DynamicResource TransparentTextBox}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                     AcceptsReturn="{TemplateBinding AcceptsReturn}" TextWrapping="{TemplateBinding TextWrapping}"
                     Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, UpdateSourceTrigger=PropertyChanged}"/>
        </Border>
    </ControlTemplate>
    
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="BorderBrush" Value="{x:Null}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template" Value="{DynamicResource TextBoxTemplate}"/>
    </Style>

    <ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="ButtonTemplate">
        <Border Background="{TemplateBinding Background}" Style="{DynamicResource BorderStyle}"
                Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter Content="{TemplateBinding Content}"/>
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type ButtonBase}" x:Key="ButtonStyle">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBrush}"/>
                <Setter Property="Opacity" Value="0.85"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Padding" Value="32, 6"/>
        <Setter Property="Template" Value="{DynamicResource ButtonTemplate}"/>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="ListBoxStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate TargetType="{x:Type Control}" x:Key="AvatarTemplate">
            <Ellipse  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Stroke="{DynamicResource PrimaryBrush}">
                <Ellipse.Effect>
                    <DropShadowEffect BlurRadius="3" Direction="-90" Opacity="0.18" ShadowDepth="3"/>
                </Ellipse.Effect>
                <Ellipse.Fill>
                    <ImageBrush ImageSource="/resources/images/default-user.png" />
                </Ellipse.Fill>
            </Ellipse>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type RadioButton}" x:Key="RadioButtonIsNull">
        <ContentPresenter Content="{TemplateBinding Content}"/>
    </ControlTemplate>

    <!--<Style TargetType="{x:Type Window}" x:Key="DefaultWindowStyle">
        <Setter Property="FontFamily" Value="/DormitoryApp;component/resources/fonts/#Gardens CM"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
    </Style>

    <Style TargetType="{x:Type Page}" x:Key="DefaultPageStyle">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="/DormitoryApp;component/resources/fonts/#Gardens CM"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockStyle">
        <Setter Property="FontFamily" Value="/DormitoryApp;component/resources/fonts/#Gardens CM"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TitleText">
        <Setter Property="Text" Value="{DynamicResource i18n-Title}"/>
        <Setter Property="FontSize" Value="36"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="SubText">
        <Setter Property="Foreground" Value="{DynamicResource SubPrimaryBrush}"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="TransparentButton">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource TransparentButton}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" CornerRadius="20" BorderThickness="0" Effect="{StaticResource DropShadow}" Background="{StaticResource PrimaryBrush}">
                        <ContentControl FontSize="18" Foreground="{StaticResource SecondaryBrush}" Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>


    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type RadioButton}" x:Key="RadioButtonIsNull">
        <ContentPresenter Content="{TemplateBinding Content}"/>
    </ControlTemplate>-->


    <!-- ControlTemplates -->

</ResourceDictionary>